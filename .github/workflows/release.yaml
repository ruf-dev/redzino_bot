name: master-actions
run-name: RELEASE
on:
  push:
    branches:
      - "master"

jobs:
  image-build:
    runs-on: ubuntu-24.04
    steps:
      - name: build
        uses: RedSockActions/release_image@v1.0.28
        with:
          DRYRUN: true
          REGISTRY_USER: ${{ vars.REGISTRY_USER }}
          REGISTRY_PWD:  ${{ secrets.REGISTRY_PWD }}

  tag-release:
    runs-on: ubuntu-24.04
    needs:
      - image-build
    steps:
      - name: Release tag
        id: release
        uses: RedSockActions/release_tag@v1.1.6
        with:
          token: ${{ github.token }}
    outputs:
      tag: ${{ steps.release.outputs.tag }}

  registry-release:
    runs-on: ubuntu-24.04
    outputs:
      image-url: ${{ steps.release-step.outputs.image_url }}
    needs:
      - tag-release
    steps:
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Release image
        id: release-step
        if: ${{ needs.tag-release.outputs.tag != '' }}
        uses: RedSockActions/release_image@v1.0.28
        with:
          REGISTRY_USER: ${{ vars.REGISTRY_USER }}
          REGISTRY_PWD:  ${{ secrets.REGISTRY_PWD }}
          REGISTRY_URL: docker.io

      - name: Save updated cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache

  announce:
    needs: registry-release
    runs-on: ubuntu-latest
    steps:
      - name: Print Docker Hub link
        run: |
          echo "Docker image: ${{ needs.registry-release.outputs.image-url }}"